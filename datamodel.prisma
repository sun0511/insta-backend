type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]!
  likes: [Like!]!
  comments: [Comment!]!
  rooms: [Room!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  user: User!
  location: String
  caption: String!
  files: [File!]! @relation(name:"FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost" onDelete: CASCADE)
  comments: [Comment!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like{
  id: ID! @id
  user: User!
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment{
  id: ID! @id
  text: String!
  user: User!
  post: Post
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File{
  id: ID! @id
  url: String!
  post: Post @relation(name:"FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room{
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message{
  id: ID! @id
  text: String! 
  from: User! @relation(name:"From")
  to: User! @relation(name:"To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}